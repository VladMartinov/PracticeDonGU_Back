// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PracticeDonGU_Back.Contexts;

#nullable disable

namespace PracticeDonGU_Back.Migrations
{
    [DbContext(typeof(PracticeDbContext))]
    [Migration("20240608125730_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PracticeDonGU_Back.Models.Mineral", b =>
                {
                    b.Property<long>("MineralId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MineralId"));

                    b.Property<string>("MineralName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MineralId");

                    b.ToTable("Minerals");
                });

            modelBuilder.Entity("PracticeDonGU_Back.Models.Record", b =>
                {
                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("MineralId")
                        .HasColumnType("bigint");

                    b.Property<float>("RecordValue")
                        .HasColumnType("real");

                    b.Property<long?>("UnitId")
                        .HasColumnType("bigint");

                    b.HasKey("RecordDate", "MineralId");

                    b.HasIndex("MineralId");

                    b.HasIndex("UnitId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("PracticeDonGU_Back.Models.Unit", b =>
                {
                    b.Property<long>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UnitId"));

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("UnitValue")
                        .HasColumnType("real");

                    b.HasKey("UnitId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("PracticeDonGU_Back.Models.Record", b =>
                {
                    b.HasOne("PracticeDonGU_Back.Models.Mineral", "Mineral")
                        .WithMany("Records")
                        .HasForeignKey("MineralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PracticeDonGU_Back.Models.Unit", "Unit")
                        .WithMany("Records")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Mineral");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("PracticeDonGU_Back.Models.Mineral", b =>
                {
                    b.Navigation("Records");
                });

            modelBuilder.Entity("PracticeDonGU_Back.Models.Unit", b =>
                {
                    b.Navigation("Records");
                });
#pragma warning restore 612, 618
        }
    }
}
